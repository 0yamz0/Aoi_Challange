using System;
using System.Collections.Generic;
using System.Text;

public class OldPhonePadConverter
{
    private readonly Dictionary<char, string> keypadMapping = new Dictionary<char, string>
    {
        { '1', "" },
        { '2', "ABC" },
        { '3', "DEF" },
        { '4', "GHI" },
        { '5', "JKL" },
        { '6', "MNO" },
        { '7', "PQRS" },
        { '8', "TUV" },
        { '9', "WXYZ" },
        { '0', " " },
        { '*', "" },   // '*' is used for backspace, no mapping needed
        { '#', "" }    // '#' is used for send, no mapping needed
    };

    public string Convert(string inputString)
    {
        StringBuilder result = new StringBuilder();
        char currentKey = '\0';
        int currentKeyCount = 0;

        foreach (char c in inputString)
        {
            if (char.IsDigit(c))  // Handle number keys
            {
                if (c == currentKey)
                {
                    currentKeyCount++;
                }
                else
                {
                    if (currentKey != '\0')
                    {
                        result.Append(GetChar(currentKey, currentKeyCount));
                    }
                    currentKey = c;
                    currentKeyCount = 1;
                }
            }
            else if (c == ' ')  // Handle space as pause
            {
                if (currentKey != '\0')
                {
                    result.Append(GetChar(currentKey, currentKeyCount));
                    currentKey = '\0';
                    currentKeyCount = 0;
                }
            }
            else if (c == '*')  // Handle backspace
            {
                if (result.Length > 0)
                {
                    result.Remove(result.Length - 1, 1);
                }
            }
            else if (c == '#')  // Handle send
            {
                if (currentKey != '\0')
                {
                    result.Append(GetChar(currentKey, currentKeyCount));
                }
                break;  // End of input
            }
        }

        return result.ToString();
    }

    private char GetChar(char key, int count)
    {
        if (keypadMapping.ContainsKey(key))
        {
            string letters = keypadMapping[key];
            if (letters.Length > 0)
            {
                int index = (count - 1) % letters.Length;
                return letters[index];
            }
        }
        return '\0';
    }
}

public class Program
{
    public static string OldPhonePad(string inputString)
    {
        OldPhonePadConverter converter = new OldPhonePadConverter();
        return converter.Convert(inputString);
    }

    public static void Main()
    {
        Console.WriteLine(OldPhonePad("33#"));              // Output: E
        Console.WriteLine(OldPhonePad("227*#"));             // Output: B
        Console.WriteLine(OldPhonePad("4433555 555666#"));   // Output: HELLO
        Console.WriteLine(OldPhonePad("8 88777444666*664#")); // Output: ????
    }
}
